/* 
 Resulted CSS:
    style.css — используем SVG (base64) и неSVG, если невекторизуемая графика
    style.full.css — используем спрайты и обычные картинки (нормальный размер и @2x)
    style.ie8.css — используем спрайты и обычные картинки (только нормальный размер)

Resulted CSS:
    style.css — dataUriImage (SVG) и directImage (*)
    style.full.css — spriteImage, directImage * @2x
    style.ie8.css — spriteImage, directImage
 */

.spriteImage(@name) {

}

.directImage(@name) {

}

.dataUriImage(@name) {

}


/* 
    See gulpfile.js for predefined stuff
       — Variables: @baseURL, @analyticsBaseURL, @isModernBrowser, @isIE;
       — Mixins: .imageData.
 */
.noRepeatableBg(@name) when (@isModernBrowser) {
    background-image: url('@{baseURL}/img/@{name}.svg');
    }
.noRepeatableBg(@name) when (@isIE) {
    .imageData(@name);

    width: @width;
    height: @height;
    background-repeat: no-repeat;

    background-image: url('@{backgroundImage}');
    background-position: @backgroundPosition;
    background-size: @totalWidth @totalHeight;
    }
.noRepeatableBg(@name) when (@isModernBrowser) and (@isIE) {
    .leaflet-retina & {
        .imageData('@{name}@2x');

        background-image: url('@{backgroundImage}');
        }
    }

.repeatableBg(@name) when (@isModernBrowser) {
    background-image: url('@{baseURL}/img/@{name}.svg');
    }
.repeatableBg(@name) when (@isIE) {
    background-image: url('@{baseURL}/img/@{name}.png');
    }
.repeatableBg(@name) when (@isModernBrowser) and (@isIE) {
    .leaflet-retina & {
        background-image: url('@{baseURL}/img/@{name}@2x.png');
        }
    }
