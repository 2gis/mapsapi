{
  "name": "gulp-stylus",
  "description": "Stylus plugin for Gulp",
  "version": "0.0.12",
  "homepage": "http://github.com/stevelacy/gulp-stylus",
  "repository": {
    "type": "git",
    "url": "http://github.com/stevelacy/gulp-stylus.git"
  },
  "author": {
    "name": "Steve Lacy - http://slacy.me | Fractal http://wearefractal.com"
  },
  "main": "./index.js",
  "dependencies": {
    "stylus": "~0.42.1",
    "map-stream": "~0.1.0",
    "gulp-util": "~2.2.12",
    "nib": "~1.0.2"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "engines": {
    "node": ">= 0.9.0"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "licenses": {
    "type": "MIT",
    "url": "https://github.com/stevelacy/gulp-stylus/raw/master/LICENSE"
  },
  "bugs": {
    "url": "https://github.com/stevelacy/gulp-stylus/issues"
  },
  "directories": {
    "example": "examples",
    "test": "test"
  },
  "keywords": [
    "gulp",
    "stylus",
    "nib",
    "css",
    "preprocessor",
    "gulpplugin",
    "gulp-plugin"
  ],
  "license": "MIT",
  "readme": "#gulp-stylus\n[![Build Status](https://travis-ci.org/stevelacy/gulp-stylus.png?branch=master)](https://travis-ci.org/stevelacy/gulp-stylus)\n[![NPM version](https://badge.fury.io/js/gulp-stylus.png)](http://badge.fury.io/js/gulp-stylus)\n\n> Compile [Stylus](http://learnboost.github.io/stylus/) with gulp (gulpjs.com)\n\n## Information\n\n<table>\n<tr> \n<td>Package</td><td>gulp-stylus</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Stylus plugin for Gulp</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.9</td>\n</tr>\n<tr>\n<td>Gulp Version</td>\n<td>3.x</td>\n</tr>\n</table>\n\n## Usage\n#### Install\n\t\tnpm install gulp-stylus --save\n\n## Examples\n\n```javascript\n\n// Gulpfile.js\n// Require the needed packages\nvar gulp = require('gulp');\nvar stylus = require('gulp-stylus');\n\n\n// Get one .styl file and render\ngulp.task('one', function () {\n\tgulp.src('./css/one.styl')\n\t\t.pipe(stylus({\n\t\t\tpaths: [\"/home/stylus-plugins/\"], // only needed in special cases,\n\t\t\tset:['compress']\n\t\t}))\n\t\t.pipe(gulp.dest('./css'));\n});\n\n\n// Get all .styl files in one folder and render\ngulp.task('one', function () {\n\tgulp.src('./css/blue/*.styl')\n\t\t.pipe(stylus())\n\t\t.pipe(gulp.dest('./css/blue'));\n});\n\n\n\n// Get and render all .styl files recursively \ngulp.task('stylus', function () {\n\tgulp.src('./css/**/*.styl')\n\t\t.pipe(stylus())\n\t\t.pipe(gulp.dest('./css'));\n});\n\n\n// Stylus.use options:\n// Use nib\ngulp.task('nib', function () {\n\tgulp.src('./css/nib/*.styl')\n\t\t.pipe(stylus({use: ['nib']}))\n\t\t.pipe(gulp.dest('./css/'));\n});\n\n// Note: 'import:' is no longer needed when using 'use:['nib']' after 0.0.11\n// nib usage\ngulp.task('nib', function () {\n\tgulp.src('./css/nib/*.styl')\n\t\t.pipe(stylus({\n\t\t\tuse: ['nib']}))\n\t\t.pipe(gulp.dest('./css/'));\n});\n\n\n// Stylus.set options:\n// Option compress\ngulp.task('compress', function () {\n\tgulp.src('./css/compressed/*.styl')\n\t\t.pipe(stylus({set:['compress']}))\n\t\t.pipe(gulp.dest('./css/compressed'));\n});\n\n// Option linenos\ngulp.task('linenos', function () {\n\tgulp.src('./css/linenos/*.styl')\n\t\t.pipe(stylus({set:['linenos']}))\n\t\t.pipe(gulp.dest('./css/linenos'));\n});\n\n// Option import file\ngulp.task('import', function () {\n\tgulp.src('./css/test.styl')\n\t\t.pipe(stylus({import: ['./one.styl']})) // the file is Relative to the Other styl files\n\t\t.pipe(gulp.dest('./css/import'));\n});\n\n// Option urlFunc - inline images\ngulp.task('urlfunc', function(){\n\tgulp.src('./css/urlfunc.styl')\n\t.pipe(stylus({urlFunc: ['inline-image']}))\n\t.pipe(gulp.dest('./css/urlfunc/'));\n});\n\n\n\n\n\n\n// Default gulp task to run\ngulp.task('default', ['stylus', 'one']);\n\n```\n####You can view more examples in the [example folder.](https://github.com/stevelacy/gulp-stylus/tree/master/examples)\n\n\n## API\n\n\n### stylus(options)  \n\n#### options.use\nType: `Array`  \nDefault: `undefined`  \n\nArray of string representing names of modules which will be used as extensions \nto Stylus (e.g. 'nib'). Modules are required inside of the plugin and invoked.\n\nOptions to the stylus stream are passed straight through to the stylus module.\n\nNote: 'import:' is no longer needed when using 'use:['nib']' after 0.0.11\nExample:\n```javascript\n// stylus.use('nib')\n\n.pipe(stylus({use: ['nib']}))\n```\n\n\n#### options.set\nType: `Array`  \nDefault: `undefined`\n\nExample:\n```javascript\n// stylus.set(['compress': true ]);\n.pipe(stylus({set: ['compress']}))\n\n// stylus.set(['linenos': true]);\n.pipe(stylus({set: ['linenos']}))\n\n```\n\n#### options.import\nType: `Array`  \nDefault: `undefined`\n\nExample:\n```javascript\n// stylus.import(['./file.styl']);\n.pipe(stylus({import:['./file.styl']}))\n\n// stylus.import(['./css/*.css']);\n.pipe(stylus({import:['./*.css']}))\n\n```\n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2013 Steve Lacy <me@slacy.me> - Fractal <contact@wearefractal.com> wearefractal.com\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "gulp-stylus@0.0.12",
  "dist": {
    "shasum": "f92a26b335cab5d2a2129582bead7e38f959a0e9"
  },
  "_from": "gulp-stylus@",
  "_resolved": "https://registry.npmjs.org/gulp-stylus/-/gulp-stylus-0.0.12.tgz"
}
